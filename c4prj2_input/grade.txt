Grading at Sun Jan 12 02:38:33 UTC 2020
Compiling cards.c -> cards.o
Compiling deck.c -> deck.o
Compiling input.c -> input.o
Compiling future.c -> future.o
Linking input.o, future.o deck.o, cards.o, and our tester
Testing with input file with 
 o 1 hand
 o No unknown/future cards
Valgrind reported errors:
==975== Memcheck, a memory error detector
==975== Copyright (C) 2002-2015, and GNU GPL'd, by Julian Seward et al.
==975== Using Valgrind-3.11.0 and LibVEX; rerun with -h for copyright info
==975== Command: ./tester hands.txt draw.txt
==975== Parent PID: 974
==975== 
==975== Invalid read of size 8
==975==    at 0x4011B1: print_hand (in /graderhome/work/c4prj2_input/tester)
==975==    by 0x401DA4: main (test-input.c:84)
==975==  Address 0x8 is not stack'd, malloc'd or (recently) free'd
==975== 
==975== 
==975== Process terminating with default action of signal 11 (SIGSEGV): dumping core
==975==  Access not within mapped region at address 0x8
==975==    at 0x4011B1: print_hand (in /graderhome/work/c4prj2_input/tester)
==975==    by 0x401DA4: main (test-input.c:84)
==975==  If you believe this happened as a result of a stack
==975==  overflow in your program's main thread (unlikely but
==975==  possible), you can try to increase the size of the
==975==  main thread stack using the --main-stacksize= flag.
==975==  The main thread stack size used in this run was 8388608.
==975== 
==975== HEAP SUMMARY:
==975==     in use at exit: 88 bytes in 9 blocks
==975==   total heap usage: 18 allocs, 9 frees, 15,296 bytes allocated
==975== 
==975== LEAK SUMMARY:
==975==    definitely lost: 24 bytes in 2 blocks
==975==    indirectly lost: 16 bytes in 2 blocks
==975==      possibly lost: 0 bytes in 0 blocks
==975==    still reachable: 48 bytes in 5 blocks
==975==         suppressed: 0 bytes in 0 blocks
==975== Rerun with --leak-check=full to see details of leaked memory
==975== 
==975== For counts of detected and suppressed errors, rerun with: -v
==975== ERROR SUMMARY: 1 errors from 1 contexts (suppressed: 0 from 0)
Testing with input file with 
 o Many hands
 o No unknown/future cards
Valgrind reported errors:
==980== Memcheck, a memory error detector
==980== Copyright (C) 2002-2015, and GNU GPL'd, by Julian Seward et al.
==980== Using Valgrind-3.11.0 and LibVEX; rerun with -h for copyright info
==980== Command: ./tester hands.txt draw.txt
==980== Parent PID: 979
==980== 
==980== Invalid read of size 8
==980==    at 0x4011B1: print_hand (in /graderhome/work/c4prj2_input/tester)
==980==    by 0x401DA4: main (test-input.c:84)
==980==  Address 0x8 is not stack'd, malloc'd or (recently) free'd
==980== 
==980== 
==980== Process terminating with default action of signal 11 (SIGSEGV): dumping core
==980==  Access not within mapped region at address 0x8
==980==    at 0x4011B1: print_hand (in /graderhome/work/c4prj2_input/tester)
==980==    by 0x401DA4: main (test-input.c:84)
==980==  If you believe this happened as a result of a stack
==980==  overflow in your program's main thread (unlikely but
==980==  possible), you can try to increase the size of the
==980==  main thread stack using the --main-stacksize= flag.
==980==  The main thread stack size used in this run was 8388608.
==980== 
==980== HEAP SUMMARY:
==980==     in use at exit: 232 bytes in 21 blocks
==980==   total heap usage: 39 allocs, 18 frees, 20,216 bytes allocated
==980== 
==980== LEAK SUMMARY:
==980==    definitely lost: 96 bytes in 8 blocks
==980==    indirectly lost: 64 bytes in 8 blocks
==980==      possibly lost: 0 bytes in 0 blocks
==980==    still reachable: 72 bytes in 5 blocks
==980==         suppressed: 0 bytes in 0 blocks
==980== Rerun with --leak-check=full to see details of leaked memory
==980== 
==980== For counts of detected and suppressed errors, rerun with: -v
==980== ERROR SUMMARY: 1 errors from 1 contexts (suppressed: 0 from 0)
Testing with input file with 
 o Many hands
 o 1 unknown/future cards per hand
Valgrind reported errors:
==986== Memcheck, a memory error detector
==986== Copyright (C) 2002-2015, and GNU GPL'd, by Julian Seward et al.
==986== Using Valgrind-3.11.0 and LibVEX; rerun with -h for copyright info
==986== Command: ./tester h.txt d.txt
==986== Parent PID: 985
==986== 
==986== Invalid read of size 8
==986==    at 0x4011B1: print_hand (in /graderhome/work/c4prj2_input/tester)
==986==    by 0x401DA4: main (test-input.c:84)
==986==  Address 0x8 is not stack'd, malloc'd or (recently) free'd
==986== 
==986== 
==986== Process terminating with default action of signal 11 (SIGSEGV): dumping core
==986==  Access not within mapped region at address 0x8
==986==    at 0x4011B1: print_hand (in /graderhome/work/c4prj2_input/tester)
==986==    by 0x401DA4: main (test-input.c:84)
==986==  If you believe this happened as a result of a stack
==986==  overflow in your program's main thread (unlikely but
==986==  possible), you can try to increase the size of the
==986==  main thread stack using the --main-stacksize= flag.
==986==  The main thread stack size used in this run was 8388608.
==986== 
==986== HEAP SUMMARY:
==986==     in use at exit: 544 bytes in 42 blocks
==986==   total heap usage: 75 allocs, 33 frees, 20,768 bytes allocated
==986== 
==986== LEAK SUMMARY:
==986==    definitely lost: 96 bytes in 8 blocks
==986==    indirectly lost: 64 bytes in 8 blocks
==986==      possibly lost: 0 bytes in 0 blocks
==986==    still reachable: 384 bytes in 26 blocks
==986==         suppressed: 0 bytes in 0 blocks
==986== Rerun with --leak-check=full to see details of leaked memory
==986== 
==986== For counts of detected and suppressed errors, rerun with: -v
==986== ERROR SUMMARY: 1 errors from 1 contexts (suppressed: 0 from 0)
Testing with input file with 
 o Many hands
 o Many unknown/future cards per hand
Valgrind reported errors:
==992== Memcheck, a memory error detector
==992== Copyright (C) 2002-2015, and GNU GPL'd, by Julian Seward et al.
==992== Using Valgrind-3.11.0 and LibVEX; rerun with -h for copyright info
==992== Command: ./tester i1 i2
==992== Parent PID: 991
==992== 
==992== Conditional jump or move depends on uninitialised value(s)
==992==    at 0x401699: assert_card_valid (in /graderhome/work/c4prj2_input/tester)
==992==    by 0x4018CD: card_from_letters (in /graderhome/work/c4prj2_input/tester)
==992==    by 0x400CDC: hand_from_string (in /graderhome/work/c4prj2_input/tester)
==992==    by 0x400E0F: read_input (in /graderhome/work/c4prj2_input/tester)
==992==    by 0x401C89: main (test-input.c:69)
==992== 
==992== 
==992== Process terminating with default action of signal 6 (SIGABRT): dumping core
==992==    at 0x4E6F428: raise (raise.c:54)
==992==    by 0x4E71029: abort (abort.c:89)
==992==    by 0x4E67BD6: __assert_fail_base (assert.c:92)
==992==    by 0x4E67C81: __assert_fail (assert.c:101)
==992==    by 0x4016C3: assert_card_valid (in /graderhome/work/c4prj2_input/tester)
==992==    by 0x4018CD: card_from_letters (in /graderhome/work/c4prj2_input/tester)
==992==    by 0x400CDC: hand_from_string (in /graderhome/work/c4prj2_input/tester)
==992==    by 0x400E0F: read_input (in /graderhome/work/c4prj2_input/tester)
==992==    by 0x401C89: main (test-input.c:69)
==992== 
==992== HEAP SUMMARY:
==992==     in use at exit: 896 bytes in 21 blocks
==992==   total heap usage: 37 allocs, 16 frees, 11,918 bytes allocated
==992== 
==992== LEAK SUMMARY:
==992==    definitely lost: 96 bytes in 8 blocks
==992==    indirectly lost: 64 bytes in 8 blocks
==992==      possibly lost: 0 bytes in 0 blocks
==992==    still reachable: 736 bytes in 5 blocks
==992==         suppressed: 0 bytes in 0 blocks
==992== Rerun with --leak-check=full to see details of leaked memory
==992== 
==992== For counts of detected and suppressed errors, rerun with: -v
==992== Use --track-origins=yes to see where uninitialised values come from
==992== ERROR SUMMARY: 1 errors from 1 contexts (suppressed: 0 from 0)

Overall Grade: F

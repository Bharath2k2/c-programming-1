Grading at Mon Jan 13 03:00:26 UTC 2020
Compiling cards.c -> cards.o
Compiling deck.c -> deck.o
Compiling input.c -> input.o
Compiling future.c -> future.o
Linking input.o, future.o deck.o, cards.o, and our tester
Testing with input file with 
 o 1 hand
 o No unknown/future cards
Your file did not match the expected ouput
Test case failed
Testing with input file with 
 o Many hands
 o No unknown/future cards
Your file did not match the expected ouput
Test case failed
Testing with input file with 
 o Many hands
 o 1 unknown/future cards per hand
Valgrind reported errors:
==1621== Memcheck, a memory error detector
==1621== Copyright (C) 2002-2015, and GNU GPL'd, by Julian Seward et al.
==1621== Using Valgrind-3.11.0 and LibVEX; rerun with -h for copyright info
==1621== Command: ./tester h.txt d.txt
==1621== Parent PID: 1620
==1621== 
==1621== Invalid read of size 8
==1621==    at 0x401044: future_cards_from_deck (in /graderhome/work/c4prj2_input/tester)
==1621==    by 0x401C90: main (test-input.c:81)
==1621==  Address 0x52059e8 is 0 bytes after a block of size 8 alloc'd
==1621==    at 0x4C2DB8F: malloc (in /usr/lib/valgrind/vgpreload_memcheck-amd64-linux.so)
==1621==    by 0x4C2FDEF: realloc (in /usr/lib/valgrind/vgpreload_memcheck-amd64-linux.so)
==1621==    by 0x400F76: add_future_card (in /graderhome/work/c4prj2_input/tester)
==1621==    by 0x400C15: hand_from_string (in /graderhome/work/c4prj2_input/tester)
==1621==    by 0x400D48: read_input (in /graderhome/work/c4prj2_input/tester)
==1621==    by 0x401BB6: main (test-input.c:69)
==1621== 
==1621== Invalid write of size 4
==1621==    at 0x40105E: future_cards_from_deck (in /graderhome/work/c4prj2_input/tester)
==1621==    by 0x401C90: main (test-input.c:81)
==1621==  Address 0x0 is not stack'd, malloc'd or (recently) free'd
==1621== 
==1621== 
==1621== Process terminating with default action of signal 11 (SIGSEGV): dumping core
==1621==  Access not within mapped region at address 0x0
==1621==    at 0x40105E: future_cards_from_deck (in /graderhome/work/c4prj2_input/tester)
==1621==    by 0x401C90: main (test-input.c:81)
==1621==  If you believe this happened as a result of a stack
==1621==  overflow in your program's main thread (unlikely but
==1621==  possible), you can try to increase the size of the
==1621==  main thread stack using the --main-stacksize= flag.
==1621==  The main thread stack size used in this run was 8388608.
==1621== 
==1621== HEAP SUMMARY:
==1621==     in use at exit: 1,024 bytes in 71 blocks
==1621==   total heap usage: 123 allocs, 52 frees, 15,712 bytes allocated
==1621== 
==1621== LEAK SUMMARY:
==1621==    definitely lost: 32 bytes in 4 blocks
==1621==    indirectly lost: 0 bytes in 0 blocks
==1621==      possibly lost: 0 bytes in 0 blocks
==1621==    still reachable: 992 bytes in 67 blocks
==1621==         suppressed: 0 bytes in 0 blocks
==1621== Rerun with --leak-check=full to see details of leaked memory
==1621== 
==1621== For counts of detected and suppressed errors, rerun with: -v
==1621== ERROR SUMMARY: 2 errors from 2 contexts (suppressed: 0 from 0)
Testing with input file with 
 o Many hands
 o Many unknown/future cards per hand
Valgrind reported errors:
==1627== Memcheck, a memory error detector
==1627== Copyright (C) 2002-2015, and GNU GPL'd, by Julian Seward et al.
==1627== Using Valgrind-3.11.0 and LibVEX; rerun with -h for copyright info
==1627== Command: ./tester i1 i2
==1627== Parent PID: 1626
==1627== 
==1627== Invalid read of size 8
==1627==    at 0x401044: future_cards_from_deck (in /graderhome/work/c4prj2_input/tester)
==1627==    by 0x401C90: main (test-input.c:81)
==1627==  Address 0x5208ef0 is 0 bytes after a block of size 48 alloc'd
==1627==    at 0x4C2FD5F: realloc (in /usr/lib/valgrind/vgpreload_memcheck-amd64-linux.so)
==1627==    by 0x400E32: add_future_card (in /graderhome/work/c4prj2_input/tester)
==1627==    by 0x400C15: hand_from_string (in /graderhome/work/c4prj2_input/tester)
==1627==    by 0x400D48: read_input (in /graderhome/work/c4prj2_input/tester)
==1627==    by 0x401BB6: main (test-input.c:69)
==1627== 
==1627== Invalid write of size 4
==1627==    at 0x40105E: future_cards_from_deck (in /graderhome/work/c4prj2_input/tester)
==1627==    by 0x401C90: main (test-input.c:81)
==1627==  Address 0x0 is not stack'd, malloc'd or (recently) free'd
==1627== 
==1627== 
==1627== Process terminating with default action of signal 11 (SIGSEGV): dumping core
==1627==  Access not within mapped region at address 0x0
==1627==    at 0x40105E: future_cards_from_deck (in /graderhome/work/c4prj2_input/tester)
==1627==    by 0x401C90: main (test-input.c:81)
==1627==  If you believe this happened as a result of a stack
==1627==  overflow in your program's main thread (unlikely but
==1627==  possible), you can try to increase the size of the
==1627==  main thread stack using the --main-stacksize= flag.
==1627==  The main thread stack size used in this run was 8388608.
==1627== 
==1627== HEAP SUMMARY:
==1627==     in use at exit: 2,768 bytes in 182 blocks
==1627==   total heap usage: 329 allocs, 147 frees, 22,120 bytes allocated
==1627== 
==1627== LEAK SUMMARY:
==1627==    definitely lost: 232 bytes in 29 blocks
==1627==    indirectly lost: 0 bytes in 0 blocks
==1627==      possibly lost: 0 bytes in 0 blocks
==1627==    still reachable: 2,536 bytes in 153 blocks
==1627==         suppressed: 0 bytes in 0 blocks
==1627== Rerun with --leak-check=full to see details of leaked memory
==1627== 
==1627== For counts of detected and suppressed errors, rerun with: -v
==1627== ERROR SUMMARY: 2 errors from 2 contexts (suppressed: 0 from 0)

Overall Grade: F
